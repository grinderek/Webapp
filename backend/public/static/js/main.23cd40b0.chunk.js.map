{"version":3,"sources":["InputField.js","SubmitButton.js","stores/UserStore.js","LoginForm.js","SignUpForm.js","LoggedInForm.js","App.js","reportWebVitals.js","index.js"],"names":["InputField","className","type","this","props","placeholder","value","onChange","e","target","React","Component","SubmitButton","disabled","onClick","class","text","extendObservable","loading","isLoggedIn","username","signUp","data","LoginForm","state","password","buttonDisabled","property","val","trim","setState","a","fetch","method","headers","body","JSON","stringify","res","json","result","success","UserStore","resetForm","alert","msg","console","log","style","maxWidth","SetInputValue","doLogin","href","SignUpForm","email","validator","isEmail","doSignUp","usernames","onRowSelect","row","isSelected","row_user","push","i","length","splice","onSelectAll","rows","LoggedInForm","tableRef","createRef","user","selfKill","selectRow","mode","clickToSelect","onSelect","role","aria-label","doBlock","doUnblock","doDelete","keyField","columns","dataField","doLogout","App","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23cd40b0.chunk.js","sourcesContent":["import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass InputField extends React.Component {\n    render() {\n        return (\n            <div>\n                \n                <input className=\"d-block w-100\"\n                    type={this.props.type}\n                    placeholder={this.props.placeholder}\n                    value={this.props.value}\n                    onChange={ (e) => this.props.onChange(e.target.value)}\n                />\n                \n            </div>\n        )\n    }\n}\n\nexport default InputField;\n","import React from 'react'\n\nclass SubmitButton extends React.Component {\n    render() {\n        return (\n            <div>\n                \n                <button\n                    disabled={this.props.disabled}\n                    onClick={ () => this.props.onClick() }\n                    class={this.props.class}\n                >\n                    {this.props.text}\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default SubmitButton;\n","import { extendObservable } from 'mobx';\n\nclass UserStore{\n    constructor() {\n        extendObservable(this, {\n\n            loading: true,\n            isLoggedIn: false,\n            username: '',\n            signUp: false,\n            data: []\n\n        })\n    }\n}\n\nexport default new UserStore();","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react'\nimport InputField from './InputField';\nimport SubmitButton from './SubmitButton'\nimport UserStore from './stores/UserStore'\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass LoginForm extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            buttonDisabled: false\n        }\n    }\n\n    SetInputValue(property, val){\n        val = val.trim();\n        this.setState({\n            [property]: val\n        })\n    }\n\n    resetForm() {\n        this.setState({\n            username: '',\n            password: '',\n            buttonDisabled: false\n        })\n    }\n\n    async doLogin() {\n\n        if (!this.state.username) {\n            return;\n        }\n\n        if (!this.state.password) {\n            return;\n        }\n\n        this.setState({\n            buttonDisabled: true\n        })\n\n        try {\n\n            let res = await fetch('/login', {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    username: this.state.username,\n                    password: this.state.password\n                })\n            });\n\n            let result = await res.json();\n            if (result && result.success) {\n                UserStore.isLoggedIn = true;\n                UserStore.username = result.username;\n                UserStore.data = result.data;\n            }\n\n            else if (result && result.success === false) {\n                this.resetForm();\n                alert(result.msg);\n            }\n        }\n\n        catch(e) {\n            console.log(e);\n            this.resetForm();\n        }\n\n    }\n\n    render() {\n        return (\n            <div className='w-100' style={{maxWidth: \"450px\"}}>\n                \n                <h2 className='text-center'>Login</h2>\n\n                <div className='pb-2'>\n                    <InputField\n                        type='text'\n                        placeholder='Username'\n                        value={this.state.username ? this.state.username : ''}\n                        onChange={ (val) => this.SetInputValue('username', val) }\n                    />\n                </div>\n                \n                <div className='pb-2'>\n                    <InputField\n                        type='password'\n                        placeholder='Password'\n                        value={this.state.password ? this.state.password : ''}\n                        onChange={ (val) => this.SetInputValue('password', val) }\n                    />\n                </div>\n\n                <div>\n                    <SubmitButton\n                        text='Sign in'\n                        disabled={this.state.buttonDisabled}\n                        onClick={() => this.doLogin()}\n                        class='btn btn-primary btn-lg btn-block'\n                    />\n                </div>\n\n                <div>\n                    Or press <a href='#' onClick={ () => UserStore.signUp = true} >Sign up</a> if new\n                </div>\n            \n            </div>\n        )\n    }\n}\n\nexport default LoginForm;\n","import React from 'react'\nimport InputField from './InputField';\nimport SubmitButton from './SubmitButton'\nimport UserStore from './stores/UserStore'\nimport validator from 'validator'\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass SignUpForm extends React.Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            email: '',\n            buttonDisabled: false\n        }\n    }\n\n    SetInputValue(property, val){\n        val = val.trim();\n        this.setState({\n            [property]: val\n        })\n    }\n\n    resetForm() {\n        this.setState({\n            username: '',\n            password: '',\n            email: '',\n            buttonDisabled: false\n        })\n    }\n\n    async doSignUp() {\n\n        if (!this.state.username) {\n            return;\n        }\n\n        if (!this.state.password) {\n            return;\n        }\n\n        if (!this.state.email) {\n            return;\n        }\n\n        if (validator.isEmail(this.state.email) === false) {\n            alert(\"Email is not valid\");\n            this.resetForm();\n            return;\n        }\n\n        this.setState({\n            buttonDisabled: true\n        })\n\n        try {\n            \n            let res = await fetch('/signUp', {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    username: this.state.username,\n                    password: this.state.password,\n                    email: this.state.email\n                })\n            });\n\n            \n            let result = await res.json();\n            if (result && result.success) {\n                UserStore.signUp = false;\n                alert(result.msg);\n            }\n\n            else if (result && result.success === false) {\n                this.resetForm();\n                alert(result.msg);\n            }\n\n        }\n\n        catch(e) {\n            console.log(e);\n            this.resetForm();\n        }\n\n    }\n\n    render() {\n        return (\n            <div className='w-100' style={{maxWidth: \"450px\"}}>\n                \n                <h2 className='text-center'>Registration</h2>\n\n                <div className='pb-2'>\n                    <InputField\n                        type='text'\n                        placeholder='Username'\n                        value={this.state.username ? this.state.username : ''}\n                        onChange={ (val) => this.SetInputValue('username', val) }\n                    />\n                </div>\n                \n                <div className='pb-2'>\n                    <InputField\n                        type='email'\n                        placeholder='Email'\n                        value={this.state.email ? this.state.email : ''}\n                        onChange={ (val) => this.SetInputValue('email', val) }\n                    />\n                </div>\n\n                <div className='pb-2'>\n                    <InputField\n                        type='password'\n                        placeholder='Password'\n                        value={this.state.password ? this.state.password : ''}\n                        onChange={ (val) => this.SetInputValue('password', val) }\n                    />\n                </div>\n\n                <div>\n                    <SubmitButton\n                        text='Sign up'\n                        disabled={this.state.buttonDisabled}\n                        onClick={ () => this.doSignUp() }\n                        class='btn btn-primary btn-lg btn-block'\n                    />\n                </div>\n\n                <div>\n                    Or press <a href={\"#\"} onClick={ () => UserStore.signUp = false } >Sign in</a> if you have an account\n                </div>\n            \n            </div>\n        )\n    }\n}\n\nexport default SignUpForm;","import React from 'react'\nimport BootstrapTable from 'react-bootstrap-table-next'\nimport UserStore from './stores/UserStore'\nimport SubmitButton from './SubmitButton'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { MDBBtn, MDBBtnGroup } from \"mdbreact\";\n\nvar usernames = [];\n\nfunction onRowSelect(row, isSelected) {\n    var row_user = row['username'];\n    if (isSelected) {\n        usernames.push(row_user);\n    } else {\n        for (let i = 0; i < usernames.length; i++) {\n            if (usernames[i] === row_user) {\n                usernames.splice(i, 1);\n                break;\n            }\n        }\n    }\n}\n\nfunction onSelectAll(isSelected, rows) {\n    if (isSelected) {\n        for (let i = 0; i < rows.length; i++) {\n            usernames.push(rows[i].username);\n        }\n    } else {\n        usernames = []\n    }\n}\n  \nclass LoggedInForm extends React.Component {\n    \n    constructor() {\n        super();\n        this.tableRef = React.createRef();\n\n    }\n    async doLogout() {\n        try {\n            let res = await fetch('/logout', {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-type': 'application/json'\n                }\n            });\n\n            let result = await res.json();\n\n            if (result && result.success) {\n                UserStore.isLoggedIn = false;\n                UserStore.username = ' ';\n            }\n        }\n\n        catch(e) {\n            console.log(e);\n        }\n\n    }\n\n    async doDelete() {\n      \n        try {\n            let res = await fetch('/delete', {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-type': 'application/json'\n                },\n                body: JSON.stringify({\n                    username: this.props.user,\n                    data: usernames\n                })\n            });\n\n            let result = await res.json();\n\n            if (result && result.success) {\n                if (result.selfKill === true) {\n                    UserStore.isLoggedIn = false;\n                }\n\n                UserStore.data = result.data;\n            }\n\n            else {\n                alert(result.msg);\n            }\n            \n        }\n\n      catch(e) {\n          console.log(e);\n      }\n\n    }\n\n    async doBlock() {\n      \n        try {\n            let res = await fetch('/block', {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-type': 'application/json'\n                },\n                body: JSON.stringify({\n                    username: this.props.user,\n                    data: usernames\n                })\n            });\n\n            let result = await res.json();\n\n            if (result && result.success) {\n                if (result.selfKill === true) {\n                    UserStore.isLoggedIn = false;\n                }\n                \n                UserStore.data = result.data;\n            }\n\n            else {\n                alert(result.msg);\n            }\n        }\n\n      catch(e) {\n          console.log(e);\n      }\n\n    }\n\n    async doUnblock() {\n      \n        try {\n            let res = await fetch('/unblock', {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-type': 'application/json'\n                },\n                body: JSON.stringify({\n                    data: usernames\n                })\n            });\n\n            let result = await res.json();\n\n            if (result && result.success) {\n                UserStore.data = result.data;\n            }\n\n            else {\n                alert(result.msg);\n            }\n        }\n\n      catch(e) {\n          console.log(e);\n      }\n\n    }\n\n    render() {\n        const columns = [{\n            dataField: 'id',\n            text: 'ID'\n          },{\n            dataField: 'username',\n            text: 'Name'\n          },{\n            dataField: 'email',\n            text: 'Email'\n          },{\n            dataField: 'register_date',\n            text: 'Date of registration'\n          },{\n            dataField: 'login_date',\n            text: 'Date of last login'  \n          },{\n            dataField: 'status',\n            text: 'Status'  \n          }];\n\n        const selectRow = {\n            mode: 'checkbox',\n            clickToSelect: true,\n            onSelect: onRowSelect,\n            onSelectAll: onSelectAll\n        };\n        \n        return (\n            <div className=\"h-100 w-100 d-flex flex-column justify-content-center align-items-center m-0\">\n                \n                Welcome, {this.props.user}\n                \n                <div className=\"btn-toolbar\" role=\"toolbar\" aria-label=\"Toolbar with button groups\">\n                  <MDBBtnGroup className=\"mr-2 pb-2 pt-2\">\n                    <MDBBtn className=\"btn btn-primary\" onClick={ () => this.doBlock() }>Block</MDBBtn>\n                    <MDBBtn className=\"btn btn-primary\" onClick={ () => this.doUnblock() }>Unblock</MDBBtn>\n                    <MDBBtn className=\"btn btn-danger\" onClick={ () => this.doDelete() }>Delete</MDBBtn>\n                  </MDBBtnGroup>\n                </div> \n\n                <BootstrapTable className=\"h-100 w-100 d-flex flex-column justify-content-center align-items-center m-0 pb-2\"\n                 keyField='id' data={ this.props.data } columns={ columns } selectRow={selectRow} />\n                <SubmitButton\n                    text={'Log out'}\n                    disabled={false}\n                    onClick={ () => this.doLogout() }\n                    class='btn btn-primary btn-lg'\n                />\n\n            </div>\n        )\n    }\n}\n\nexport default LoggedInForm;","import React from 'react'\nimport { observer } from 'mobx-react'\nimport LoginForm from './LoginForm'\nimport UserStore from './stores/UserStore'\nimport SignUpForm from './SignUpForm'\nimport LoggedInForm from './LoggedInForm'\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass App extends React.Component {\n\n    async componentDidMount() {\n        try {\n            let res = await fetch('/isLoggedIn', {\n                method: 'post',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                }\n            });\n\n            let result = await res.json();\n\n            if (result && result.success) {\n                UserStore.loading = false;\n                UserStore.isLoggedIn = true;\n                UserStore.username = result.username;\n                UserStore.data = result.data;\n            }\n\n            else {\n                UserStore.loading = false;\n                UserStore.isLoggedIn = false;\n            }\n        }\n\n        catch(e) {\n            UserStore.loading = false;\n            UserStore.isLoggedIn = false;\n        }\n    }\n\n    render() {\n\n        if (UserStore.loading){\n            return (\n                <div className=\"w-100 h-100\">\n                    Loading, sorry...\n                </div>\n            )\n        }\n        \n        else{\n            \n            if (UserStore.isLoggedIn) {\n                return (\n                    <div className=\"h-100 w-100 d-flex flex-column justify-content-center align-items-center m-0\">\n                        <LoggedInForm \n                            user={UserStore.username}\n                            data={UserStore.data}\n                        />\n                    </div>   \n                )\n            }\n\n            if (UserStore.signUp) {\n                return (\n                    <div className=\"h-100 w-100 d-flex flex-column justify-content-center align-items-center m-0\">\n                        <SignUpForm />\n                    </div>\n                )\n            }\n\n            return (\n                <div className=\"h-100 w-100 d-flex flex-column justify-content-center align-items-center m-0\">\n                    <LoginForm />\n                </div>\n            );\n        }\n    }\n}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}